Day-9 

Q1: Two Sum

Code:
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector <int> ans;
        int i,j;
        for(i=0;i<nums.size();i++){
            for(j=0;j<nums.size();j++){
                if(nums[i]+nums[j]==target && i<j){
                    ans.push_back(i);
                    ans.push_back(j);
                    break;
                }
            }
        }
        return ans;
    }
};

T.C.: O(N^2)
S.C.: O(

Q2: Sort Colors

Code: 
class Solution {
public:
    void sortColors(vector<int>& nums) {
        sort(nums.begin(),nums.end());
    }
};

T.C.: O(N)
S.C.: O(1)

Q3: Maximum score from subarray

//Was not able to solve in the first instance. Had to see the solution after 1hr.

Code:
class Solution {
  public:
    // Function to find pair with maximum sum
    int pairWithMaxSum(vector<int> &arr) {
        // Your code goes here
        int len=arr.size();
        vector<int> vec;
        int maxsum=0;
        for(int i=0;i<len-1;i++){
            int sml=arr[i];
            int secsml=arr[i+1];
            for(int j=i+1;j<=len;j++){
                if(sml>=arr[j]){
                    secsml=sml;
                    sml=arr[j];
                }
                else if(secsml>arr[j]){
                    secsml=arr[j];
                }
                int sum=sml+secsml;
                maxsum=max(maxsum,sum);
            }
        }
        return maxsum;
    }
};

T.C.: O(N)
S.C.: O(1)