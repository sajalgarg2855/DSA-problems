Day-13

Q1 Ceil the floor

Code:
pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {
	// Write your code here.
	pair<int,int>ans(2,-1);
	int flr=a[0];
	int cel=a[n-1];
	for(int i=0;i<n;i++){
		if(a[i]<=x){
			flr=max(flr,a[i]);
		}
		if(a[i]>=x){
			cel=min(cel,a[i]);
		}
	}
	if(!(flr<=x)) flr=-1;
	if(!(cel>=x)) cel=-1;
	ans.first=flr;
	ans.second=cel;
	return ans;
}

T.C.- O(N)
S.C.- O(1)

Q2 Find minimum in rotated sorted array

Code:
class Solution {
public:
    int findMin(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        return nums[0];
    }
};

T.C.- O(N)
S.C.- O(1)

Q3 Search in rotated sorted array

Code:
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int ans=-1;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==target){
                ans=i;
                break;
            }
        }
        return ans;      
    }
};

T.C.- O(N)
S.C.- O(1)